// -------------------------
// PREFIX
// -------------------------
$prefix: byc !default;

// -------------------------
// SASS VARIABLES
// -------------------------
$default-easing: ease-in-out !default;
$default-time: 0.35s !default;

$animate-border-radius: 0 !default;
$animate-delay: 0s !default;
$animate-slide-offset: 50px !default;
$animate-zoom-start: .5 !default;

$opacity-start: 0 !default;
$opacity-end: 1 !default;
$opacity-time: 0.35s !default;

$reveal-background-color: #FFFFFF !default;
$reveal-foreground-color: #F4F4F4 !default;
$reveal-delay: .35s !default;
$reveal-time: .4s !default;

$translate-time: 0.65s !default;

// -------------------------
// CSS VARIABLES
// -------------------------
:root {
  --#{$prefix}-default-easing: #{$default-easing};
  --#{$prefix}-default-time: #{$default-time};

  --#{$prefix}-animate-border-radius: #{$animate-border-radius};
  --#{$prefix}-animate-delay: #{$animate-delay};
  --#{$prefix}-animate-slide-offset: #{$animate-slide-offset};
  --#{$prefix}-animate-zoom-start: #{$animate-zoom-start};

  --#{$prefix}-opacity-start: #{$opacity-start};
  --#{$prefix}-opacity-end: #{$opacity-end};
  --#{$prefix}-opacity-time: #{$opacity-time};


  --#{$prefix}-reveal-background-color: #{$reveal-background-color};
  --#{$prefix}-reveal-foreground-color: #{$reveal-foreground-color};
  --#{$prefix}-reveal-delay: #{$reveal-delay};
  --#{$prefix}-reveal-time: #{$reveal-time};

  --#{$prefix}-translate-time: #{$translate-time};

  // --#{$prefix}-animate-zoom-end: none; // usually we use transform: none, sometimes appy to more than 1 effect, variable needed ?

  // transition-delay for slide / zoom ? Should separate their scss
}

[data-animate] {
  transition-duration: var(--#{$prefix}-animate-duration, var(--#{$prefix}-default-time));
  transition-delay: var(--#{$prefix}-animate-delay, var(--#{$prefix}-animate-delay));
  transition-timing-function: var(--#{$prefix}-animate-easing, var(--#{$prefix}-default-easing));
}

// Reveal
[data-animate|='reveal'] {
  border-radius: var(--#{$prefix}-animate-border-radius);
  overflow: hidden;
  position: relative;
  will-change: transform;

  .reveal__background, 
  .reveal__foreground {
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    pointer-events: none;
    top: 0;
    transform: translateY(0);
    width: 100%;
  }
  .reveal__background {
    transition: transform var(--#{$prefix}-reveal-time) var(--#{$prefix}-default-easing);
    z-index: 2;
  }
  .reveal__foreground {
    background-color: inherit;
    transition: transform var(--#{$prefix}-reveal-time) var(--#{$prefix}-default-easing);
    transition-delay: var(--#{$prefix}-reveal-delay);
    z-index: 3;
  }

  &::before, 
  &::after {
    content: '';
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    pointer-events: none;
    top: 0;
    transform: translateY(0);
    width: 100%;
  }
  &::before {
    background-color: var(--#{$prefix}-reveal-background-color);
    transition: transform var(--#{$prefix}-reveal-time) var(--#{$prefix}-default-easing);
    z-index: 3;
  }
  &::after {
    background-color: var(--#{$prefix}-reveal-foreground-color);
    transition: transform var(--#{$prefix}-reveal-time) var(--#{$prefix}-default-easing);
    transition-delay: var(--#{$prefix}-reveal-delay);
    z-index: 2;
  }
}
[data-animate|='reveal'].in-view {
  .reveal__background {
    transform: translateY(-100%);
  }
  .reveal__foreground {
    transform: translateY(-100%);
  }

  &::before {
    transform: translateY(-100%);
  }
  &::after {
    transform: translateY(-100%);
  }
}

/* / Specific animations */
// Fade
[data-animate|='fade'] {
  opacity: var(--#{$prefix}-opacity-start);
  transition-property: opacity;
}

[data-animate|='fade'].in-view {
  opacity: var(--#{$prefix}-opacity-end);
}
[data-animate|='fade'].out-view {
  opacity: var(--#{$prefix}-opacity-start);
}

// Slide
[data-animate|='slide'] {
  opacity: var(--#{$prefix}-opacity-start);
  transform: translateY(var(--#{$prefix}-animate-slide-offset, var(--#{$prefix}-animate-slide-offset)));
  transition-property: opacity, transform;
  transition-duration: var(--#{$prefix}-animate-opacity-duration, var(--#{$prefix}-opacity-time)), var(--#{$prefix}-animate-slide-duration, var(--#{$prefix}-translate-time));
}

// Zoom
[data-animate|='zoom'] {
  opacity: var(--#{$prefix}-opacity-start);
  transform: scale(var(--#{$prefix}-animate-zoom-start, var(--#{$prefix}-animate-zoom-start)));
  transform-origin: center center;
  transition-property: opacity, transform;
}

[data-animate|='slide'].in-view,
[data-animate|='zoom'].in-view {
  opacity: var(--#{$prefix}-opacity-end);
  transform: none;
  transition-delay: var(--#{$prefix}-animate-delay); // 0s
}
[data-animate|='slide'].out-view {
  opacity: var(--#{$prefix}-opacity-start);
  transform: translateY(var(--#{$prefix}-animate-slide-offset, - var(--#{$prefix}-animate-slide-offset)));
  transition-delay: var(--#{$prefix}-animate-delay) !important; // 0s
}

// Mobile
@media only screen and (max-width: 991px) {
  [data-animate-mobile] {
    display: block;
  }

  // Fade
  [data-animate-mobile|='fade'] {
    opacity: var(--#{$prefix}-opacity-start);
    transition-property: opacity;

    // Unset slide/zoom properties
    transform: unset;
  }
  
  [data-animate-mobile|='fade'].in-view {
    opacity: var(--#{$prefix}-opacity-end);
  }

  // Slide
  [data-animate-mobile|='slide'] {
    opacity: var(--#{$prefix}-opacity-start);
    transform: translateY(var(--#{$prefix}-animate-slide-offset, var(--#{$prefix}-animate-slide-offset)));
    transition-property: opacity, transform;
    transition-duration: var(--#{$prefix}-animate-opacity-duration, var(--#{$prefix}-opacity-time)), var(--#{$prefix}-animate-slide-duration, var(--#{$prefix}-translate-time));
  }

  // Zoom
  [data-animate-mobile|='zoom'] {
    opacity: var(--#{$prefix}-opacity-start);
    transform: scale(var(--#{$prefix}-animate-zoom-start, var(--#{$prefix}-animate-zoom-start)));
    transform-origin: center center;
    transition-property: opacity, transform;
  }

  [data-animate-mobile|='slide'].in-view,
  [data-animate-mobile|='zoom'].in-view {
    opacity: var(--opacity-end);
    transform: none;
  }
}